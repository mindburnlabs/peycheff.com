import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import { Helmet } from 'react-helmet';
import { trackEvent, EVENTS } from '../../lib/analytics';
import CheckoutButton from '../../components/ui/CheckoutButton';

const AuditReportPage = () => {
  const { reportId } = useParams();
  const [report, setReport] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchReport = async () => {
      try {
        const response = await fetch(`/.netlify/functions/get-audit-report`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ reportId })
        });

        const result = await response.json();

        if (!response.ok) {
          throw new Error(result.error || 'Report not found');
        }

        setReport(result.report);
        
        // Track report view
        trackEvent(EVENTS.AUDIT_REPORT_VIEW, {
          report_id: reportId,
          company: result.report.metadata.companyName,
          industry: result.report.metadata.industry,
          score: result.report.metadata.overallScore
        });

      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };

    fetchReport();
  }, [reportId]);

  const handleShare = (platform) => {
    const shareUrl = window.location.href;
    const shareText = `Check out this systems audit report: ${report.metadata.companyName} scored ${report.metadata.overallScore}/100`;
    
    const shareUrls = {
      twitter: `https://twitter.com/intent/tweet?text=${encodeURIComponent(shareText)}&url=${encodeURIComponent(shareUrl)}`,
      linkedin: `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(shareUrl)}`,
      copy: shareUrl
    };

    if (platform === 'copy') {
      navigator.clipboard.writeText(shareUrl);
      trackEvent(EVENTS.AUDIT_REPORT_SHARED, { platform: 'copy', report_id: reportId });
    } else {
      window.open(shareUrls[platform], '_blank', 'width=600,height=400');
      trackEvent(EVENTS.AUDIT_REPORT_SHARED, { platform, report_id: reportId });
    }
  };

  const getPriorityColor = (priority) => {
    const colors = {
      critical: 'text-red-400 bg-red-500/10',
      high: 'text-orange-400 bg-orange-500/10',
      medium: 'text-yellow-400 bg-yellow-500/10',
      low: 'text-green-400 bg-green-500/10'
    };
    return colors[priority] || colors.medium;
  };

  const getScoreColor = (score) => {
    if (score >= 80) return 'text-green-400';
    if (score >= 60) return 'text-yellow-400';
    return 'text-red-400';
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-background flex items-center justify-center">
        <div className="text-center">
          <div className="w-8 h-8 border-2 border-[#0A84FF] border-t-transparent rounded-full animate-spin mb-4"></div>
          <p className="text-[#A5ABB3]">Loading audit report...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen bg-background flex items-center justify-center">
        <div className="text-center max-w-md">
          <h1 className="text-[24px] font-semibold text-[#F2F3F5] mb-4">Report Not Found</h1>
          <p className="text-[#A5ABB3] mb-6">{error}</p>
          <a href="/" className="apple-button">
            Go Home
          </a>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-background">
      <Helmet>
        <title>{report.metadata.companyName} Systems Audit Report | Ivan Peycheff</title>
        <meta name="description" content={`Systems audit report for ${report.metadata.companyName}: ${report.summary.totalIssues} issues found, overall score ${report.metadata.overallScore}/100`} />
        <meta property="og:title" content={`${report.metadata.companyName} Systems Audit Report`} />
        <meta property="og:description" content={`${report.summary.totalIssues} issues found, overall score ${report.metadata.overallScore}/100. Generated by Ivan Peycheff.`} />
        <meta name="robots" content="noindex" />
        
        <script type="application/ld+json">
          {JSON.stringify({
            "@context": "https://schema.org",
            "@type": "Report",
            "name": `${report.metadata.companyName} Systems Audit`,
            "author": {
              "@type": "Person",
              "name": "Ivan Peycheff"
            },
            "datePublished": report.metadata.auditDate,
            "description": `Systems audit report showing ${report.summary.totalIssues} identified issues`
          })}
        </script>
      </Helmet>

      <main className="apple-container py-12">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-[32px] md:text-[40px] font-semibold text-[#F2F3F5] mb-4">
            Systems Audit Report
          </h1>
          <p className="text-[16px] text-[#A5ABB3]">
            Generated on {report.metadata.auditDate}
          </p>
        </div>

        {/* Report Summary */}
        <div className="max-w-4xl mx-auto mb-12">
          <div className="apple-card">
            <div className="flex flex-col md:flex-row md:items-center gap-6">
              <div className="flex-1">
                <h2 className="text-[24px] font-semibold text-[#F2F3F5] mb-2">
                  {report.metadata.companyName}
                </h2>
                <div className="flex flex-wrap gap-4 text-[14px] text-[#A5ABB3]">
                  <span>{report.metadata.industry} • {report.metadata.techStack}</span>
                  {report.metadata.teamSize && <span>Team: {report.metadata.teamSize}</span>}
                </div>
              </div>
              
              <div className="text-center">
                <div className={`text-[48px] font-bold ${getScoreColor(report.metadata.overallScore)}`}>
                  {report.metadata.overallScore}
                </div>
                <div className="text-[14px] text-[#A5ABB3]">
                  Overall Score
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Issues Summary */}
        <div className="max-w-4xl mx-auto mb-12">
          <h3 className="text-[20px] font-medium text-[#F2F3F5] mb-6">Issues Summary</h3>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-8">
            <div className="apple-card text-center">
              <div className="text-[24px] font-bold text-[#F2F3F5]">{report.summary.totalIssues}</div>
              <div className="text-[12px] text-[#A5ABB3]">Total Issues</div>
            </div>
            <div className="apple-card text-center">
              <div className="text-[24px] font-bold text-red-400">{report.summary.criticalIssues}</div>
              <div className="text-[12px] text-[#A5ABB3]">Critical</div>
            </div>
            <div className="apple-card text-center">
              <div className="text-[24px] font-bold text-orange-400">{report.summary.highPriorityIssues}</div>
              <div className="text-[12px] text-[#A5ABB3]">High Priority</div>
            </div>
            <div className="apple-card text-center">
              <div className="text-[24px] font-bold text-yellow-400">{report.summary.mediumPriorityIssues}</div>
              <div className="text-[12px] text-[#A5ABB3]">Medium Priority</div>
            </div>
          </div>
        </div>

        {/* Detailed Issues */}
        <div className="max-w-4xl mx-auto mb-12">
          <h3 className="text-[20px] font-medium text-[#F2F3F5] mb-6">Detailed Issues</h3>
          <div className="space-y-4">
            {report.issues.map((issue) => (
              <div key={issue.id} className="apple-card">
                <div className="flex items-start gap-4">
                  <div className={`px-3 py-1 rounded-full text-[12px] font-medium ${getPriorityColor(issue.priority)}`}>
                    {issue.priority.toUpperCase()}
                  </div>
                  <div className="flex-1">
                    <h4 className="text-[16px] font-medium text-[#F2F3F5] mb-2">
                      {issue.issue}
                    </h4>
                    <p className="text-[14px] text-[#A5ABB3] mb-3">
                      {issue.description}
                    </p>
                    <div className="flex flex-wrap gap-4 text-[12px] text-[#666668]">
                      <span>Impact: {issue.impact}/10</span>
                      <span>Effort: {issue.effort}</span>
                      <span>Category: {issue.category}</span>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Recommendations */}
        <div className="max-w-4xl mx-auto mb-12">
          <h3 className="text-[20px] font-medium text-[#F2F3F5] mb-6">Quick Wins</h3>
          <div className="apple-card">
            <ul className="space-y-3">
              {report.recommendations.map((rec, index) => (
                <li key={index} className="flex items-start gap-3 text-[14px] text-[#A5ABB3]">
                  <span className="text-[#0A84FF] mt-1">•</span>
                  {rec}
                </li>
              ))}
            </ul>
          </div>
        </div>

        {/* Watermark */}
        <div className="bg-gradient-to-r from-[#0A84FF]/10 to-[#007AFF]/10 border border-[#0A84FF]/20 rounded-lg p-6 max-w-4xl mx-auto mb-12">
          <div className="text-center">
            <div className="text-[14px] text-[#0A84FF] font-medium mb-2">
              {report.watermark.generated_by}
            </div>
            <p className="text-[14px] text-[#A5ABB3] mb-4">
              {report.watermark.note}
            </p>
            <CheckoutButton
              productKey="AUTO_AUDIT_PRO"
              showOrderBump={false}
              className="apple-button"
            >
              Get Your Complete Audit
            </CheckoutButton>
          </div>
        </div>

        {/* Share Buttons */}
        <div className="max-w-4xl mx-auto text-center">
          <h3 className="text-[18px] font-medium text-[#F2F3F5] mb-4">Share This Report</h3>
          <div className="flex justify-center gap-4">
            <button
              onClick={() => handleShare('twitter')}
              className="px-4 py-2 bg-[#1DA1F2] text-white rounded-lg text-[14px] font-medium hover:bg-[#1a91da] apple-motion"
            >
              Share on Twitter
            </button>
            <button
              onClick={() => handleShare('linkedin')}
              className="px-4 py-2 bg-[#0077B5] text-white rounded-lg text-[14px] font-medium hover:bg-[#006396] apple-motion"
            >
              Share on LinkedIn
            </button>
            <button
              onClick={() => handleShare('copy')}
              className="px-4 py-2 bg-[#1C1C1E] border border-[#38383A] text-[#F2F3F5] rounded-lg text-[14px] font-medium hover:border-[#0A84FF] apple-motion"
            >
              Copy Link
            </button>
          </div>
        </div>
      </main>
    </div>
  );
};

export default AuditReportPage;
